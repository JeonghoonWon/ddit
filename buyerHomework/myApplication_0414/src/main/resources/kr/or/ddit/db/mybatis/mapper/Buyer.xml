<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.buyer.dao.IBuyerDAO">
	<sql id="fromFrag">
		FROM BUYER INNER JOIN LPROD ON(BUYER_LGU = LPROD_GU)
	</sql>
	<select id="selectBuyerList" resultType="BuyerVO" 
	parameterType="PagingVO">
		SELECT B.*
		FROM(
			SELECT A.*, ROWNUM RNUM
			FROM(
				SELECT
		    	BUYER_ID, BUYER_NAME, BUYER_LGU,
				BUYER_BANK, BUYER_BANKNO, BUYER_BANKNAME,
				BUYER_ZIP, BUYER_ADD1, BUYER_ADD2,
				BUYER_COMTEL, BUYER_FAX, BUYER_MAIL,
				BUYER_CHARGER, BUYER_TELEXT, BUYER_DELETE,  LPROD_NM
				<include refid="fromFrag"/>
				<include refid="searchFrag"/>
				ORDER BY BUYER_ID
			) A
		) B
		<![CDATA[
			WHERE RNUM >=#{startRow} AND RNUM<=#{endRow}
		]]>
	</select>
	
	<select id="selectTotalRecord" resultType="int"
	parameterType="PagingVO">
		SELECT COUNT(*)
		<include refid="fromFrag"/>
		<include refid="searchFrag"/>
	</select>
	
	<sql id="searchFrag">
		<trim prefix=" WHERE" prefixOverrides="AND">
			<if test="detailSearch neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.buyer_lgu)">
				AND	BUYER_LGU = #{detailSearch.buyer_lgu}
				</if>
				
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.buyer_name)">
				AND	INSTR(BUYER_NAME, #{detailSearch.buyer_name}) > 0
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectBuyer" parameterType="string" resultType="BuyerVO">
		SELECT
	    	BUYER_ID, BUYER_NAME, BUYER_LGU,
			BUYER_BANK, BUYER_BANKNO, BUYER_BANKNAME,
			BUYER_ZIP, BUYER_ADD1, BUYER_ADD2,
			BUYER_COMTEL, BUYER_FAX, BUYER_MAIL,
			BUYER_CHARGER, BUYER_TELEXT, BUYER_DELETE,LPROD_NM
		<include refid="fromFrag"/>
		WHERE BUYER_ID = #{buyer_id}
		AND BUYER_LGU = LPROD_GU
	</select>
	
	<insert id="insertBuyer" parameterType="BuyerVO">
		<selectKey resultType="string" order="BEFORE" keyProperty="buyer_id">
			SELECT #{buyer_lgu} || LPAD(TO_NUMBER(SUBSTR(NVL(MAX(BUYER_ID), LPAD('0',6, '0')), LENGTH(#{buyer_lgu})+1))+1, 2, '0') 
			FROM BUYER
			WHERE BUYER_LGU = #{buyer_lgu}
		</selectKey>
		INSERT INTO buyer (
			BUYER_ID, BUYER_NAME, BUYER_LGU,
		    BUYER_BANK, BUYER_BANKNO, BUYER_BANKNAME,
		    BUYER_ZIP, BUYER_ADD1, BUYER_ADD2,
		    BUYER_COMTEL, BUYER_FAX, BUYER_MAIL,
		    BUYER_CHARGER,BUYER_TELEXT
		) VALUES (
		    #{buyer_id, jdbcType=VARCHAR},#{buyer_name, jdbcType=VARCHAR},
		    #{buyer_lgu, jdbcType=VARCHAR},#{buyer_bank, jdbcType=VARCHAR},
		    #{buyer_bankno, jdbcType=VARCHAR},#{buyer_bankname, jdbcType=VARCHAR},
		   	#{buyer_zip, jdbcType=VARCHAR},#{buyer_add1, jdbcType=VARCHAR},
		    #{buyer_add2, jdbcType=VARCHAR}, #{buyer_comtel, jdbcType=VARCHAR},
		    #{buyer_fax, jdbcType=VARCHAR},#{buyer_mail, jdbcType=VARCHAR},
		    #{buyer_charger, jdbcType=VARCHAR},#{buyer_telext, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateBuyer" parameterType="BuyerVO">
		UPDATE BUYER SET
			BUYER_NAME    = #{buyer_name, jdbcType=VARCHAR},
			BUYER_LGU     = #{buyer_lgu, jdbcType=VARCHAR},
			BUYER_BANK    = #{buyer_bank, jdbcType=VARCHAR},
			BUYER_BANKNO  = #{buyer_bankno, jdbcType=VARCHAR},
			BUYER_BANKNAME= #{buyer_bankname, jdbcType=VARCHAR},
			BUYER_ZIP     = #{buyer_zip, jdbcType=VARCHAR},
			BUYER_ADD1    = #{buyer_add1, jdbcType=VARCHAR},
			BUYER_ADD2    = #{buyer_add2, jdbcType=VARCHAR},
			BUYER_COMTEL  = #{buyer_comtel, jdbcType=VARCHAR},
			BUYER_FAX     = #{buyer_fax, jdbcType=VARCHAR},
			BUYER_MAIL    = #{buyer_mail, jdbcType=VARCHAR},
			BUYER_CHARGER = #{buyer_charger, jdbcType=VARCHAR},
			BUYER_TELEXT  = #{buyer_telext, jdbcType=VARCHAR}
		WHERE BUYER_ID = #{buyer_id, jdbcType=VARCHAR}
	</update>
	
	<update id="deleteBuyer" parameterType="string">
		UPDATE BUYER
		SET BUYER_DELETE='Y'
		WHERE BUYER_ID = #{buyer_id, jdbcType=VARCHAR}
	</update>
</mapper>